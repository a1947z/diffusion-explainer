import {reduceLatentDenoiserL3, hyperparamChanged} from "./function.js"

document.addEventListener("keydown", (e) => {
    if (window.latentDenoiserL3Expanded && e.key == "Escape") reduceLatentDenoiserL3();
})

let sliderWidth = 120;
let sliderHeight = 120;
let tickLength = 15;
let partitions = [0,0.25,0.55,1.]

// TODO: Add Reduce Button

d3.select("#architecture-container")
    .append("div")
        .attr("id", "latent-denoiser-l3-expl-container")
d3.select("#latent-denoiser-l3-expl-container")
    .append("svg")
        .attr("id","latent-denoiser-l3-expl-vis-svg")
        .append("g")
            .attr("id","latent-denoiser-l3-expl-vis-slider-g")
            .append("line")
                .attr("fill", "none")
                .attr("stroke", "url(#latent-denoiser-l3-expl-vis-slider-gradient)")
                .attr("stroke-width", "4px")
                .attr("x1", "0")
                .attr("y1", sliderHeight)
                .attr("x2", sliderWidth)
                .attr("y2", "0")
d3.select("#latent-denoiser-l3-expl-vis-slider-g")
    .append("line")
        .attr("stroke", "url(#latent-denoiser-l3-expl-vis-slider-end-gradient)")
        .attr("stroke-width", "4px")
        .attr("x1", sliderWidth)
        .attr("y1", "0")
        .attr("x2", sliderWidth*(1+0.1))
        .attr("y2", -sliderHeight*0.1)
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("defs")
    .append("linearGradient")
        .attr("id", "latent-denoiser-l3-expl-vis-slider-gradient")
        .attr("x1", "0%")
        .attr("y1", "0%")
        .attr("x2", "100%")
        .attr("y2", "0%")
        .selectAll("stop")
        .data([["#d9d9d9", "0%"],["#CBE4EE", "15%"],["#6BB1CF","100%"]])
        .enter()
            .append("stop")
            .attr("offset", d=>d[1])
            .style("stop-color", d=>d[0])
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("defs")
    .append("linearGradient")
        .attr("id", "latent-denoiser-l3-expl-vis-slider-end-gradient")
        .attr("x1", "0%")
        .attr("y1", "0%")
        .attr("x2", "100%")
        .attr("y2", "0%")
        .selectAll("stop")
        .data([["#6BB1CF","0%"],["#FFFFFF","100%"]])
        .enter()
            .append("stop")
            .attr("offset", d=>d[1])
            .style("stop-color", d=>d[0])

d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("g")
    .attr("id", "latent-denoiser-l3-expl-vis-tick-g")
    .selectAll("line")
        .data([[0,"#D9D9D9"],[1,"#CEDFE6"],[7,"#B3D9E9"],[20,"#6BB1CF"]])
        .enter()
        .append("line")
            .attr("x1", (d,i) => partitions[i]*sliderWidth-tickLength)
            .attr("x2", (d,i) => partitions[i]*sliderWidth+1)
            .attr("y1", (d,i) => sliderHeight * (1-partitions[i]))
            .attr("y2", (d,i) => sliderHeight * (1-partitions[i]))
            .attr("stroke", d => d[1])
            .attr("stroke-width", "3px")

// Add "difference made by text prompt"
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("g")
    .attr("id", "latent-denoiser-l3-expl-vis-impact-g")
    .append("path")
        .attr("d", `M ${partitions[0]*sliderWidth+3} ${(1-partitions[0])*sliderHeight} C ${partitions[0]*sliderWidth+15+3} ${(1-partitions[0])*sliderHeight}, ${partitions[1]*sliderWidth} ${(1-partitions[1])*sliderHeight+15+3}, ${partitions[1]*sliderWidth} ${(1-partitions[1])*sliderHeight+3} l -6 8 m 6 -8 l 5 9`)
        .attr("stroke", "#d8d8d8")
        .attr("stroke-width", "1.5px")
        .attr("fill", "none")
d3.select("#latent-denoiser-l3-expl-vis-impact-g")
    .append("text")
        .text("Difference by text prompt")
        .attr("fill", "#B0B0B0")
        .style("font-weight", "300")
        .style("font-size", "12px")
        .attr("x", partitions[1]*sliderWidth+1)
        .attr("y", (1-partitions[1])*sliderHeight+30)

// Drag Functions
function dragStarted() {
    d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-circle").attr("fill", "#909090")
    d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-line").attr("stroke", "#a0a0a0")
}
function dragged(e) {
    // should move Noise, change border color as well!
    let borderColors = ["#C8E4F0FF","#A5D2E4FF","#6CB2D0FF"]
    let points = {
        1: [partitions[1]*sliderWidth, (1-partitions[1])*sliderHeight],
        7: [partitions[2]*sliderWidth, (1-partitions[2])*sliderHeight],
        20: [partitions[3]*sliderWidth, (1-partitions[3])*sliderHeight],
    }
    let defaultNoiseLeftValue = 62
    if ((e.x-points[1][0])**2+(e.y-points[1][1])**2 < (e.x-points[7][0])**2+(e.y-points[7][1])**2) {
        // put circle and line on 1
        d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-line")
            .attr("x1", points[1][0])
            .attr("y1", points[1][1])
            .attr("x2", points[1][0])
        d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-circle")
            .attr("cx", points[1][0])
            .attr("cy", points[1][1])
        d3.select("#denoise-latent-l2-expl-noise-img")
            .style("border-color", borderColors[0])
            .style("left", `${defaultNoiseLeftValue+points[1][0]-points[7][0]}px`)
        d3.select("#denoise-latent-l2-expl-noise-text")
            .style("left", `${defaultNoiseLeftValue+points[1][0]-points[7][0]-4}px`)
        hyperparamChanged(e, window.seed, "1.0");
        document.getElementById("unet-guidance-scale-control-dropdown-select").selectedIndex = 0
    }
    else if ((e.x-points[20][0])**2+(e.y-points[20][1])**2 < (e.x-points[7][0])**2+(e.y-points[7][1])**2) {
        // put circle and line on 20
        d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-line")
            .attr("x1", points[20][0])
            .attr("y1", points[20][1])
            .attr("x2", points[20][0])
        d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-circle")
            .attr("cx", points[20][0])
            .attr("cy", points[20][1])
        d3.select("#denoise-latent-l2-expl-noise-img")
            .style("border-color", borderColors[2])
            .style("left", `${defaultNoiseLeftValue+points[20][0]-points[7][0]}px`)
        d3.select("#denoise-latent-l2-expl-noise-text")
            .style("left", `${defaultNoiseLeftValue+points[20][0]-points[7][0]-4}px`)
        hyperparamChanged(e, window.seed, "20.0");
        document.getElementById("unet-guidance-scale-control-dropdown-select").selectedIndex = 2
    }
    else {
        // put circle and line on 7
        d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-line")
            .attr("x1", points[7][0])
            .attr("y1", points[7][1])
            .attr("x2", points[7][0])
        d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-circle")
            .attr("cx", points[7][0])
            .attr("cy", points[7][1])
        d3.select("#denoise-latent-l2-expl-noise-img")
            .style("border-color", borderColors[1])
            .style("left", `${defaultNoiseLeftValue}px`)
        d3.select("#denoise-latent-l2-expl-noise-text")
            .style("left", `${defaultNoiseLeftValue-4}px`)
        d3.select("#unet-guidance-scale-control-dropdown-select")
        hyperparamChanged(e, window.seed, "7.0");
        document.getElementById("unet-guidance-scale-control-dropdown-select").selectedIndex = 1
    }
}
function dragEnded() {
    d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-circle").attr("fill", "#b0b0b0")
    d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-line").attr("stroke", "#c0c0c0")
}
let drag = d3.drag()
    .on("start", dragStarted)
    .on("drag", dragged)
    .on("end", dragEnded)
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("g")
        .attr("id", "latent-denoiser-l3-expl-vis-slider-thumb-g")
        .append("line")
            .attr("id", "latent-denoiser-l3-expl-vis-slider-thumb-line")
            .attr("x1", sliderWidth*partitions[2])
            .attr("y1", sliderHeight*(1-partitions[2]))
            .attr("x2", sliderWidth*partitions[2])
            .attr("y2", "-20")
            .attr("stroke", "#c0c0c0")
            .attr("stroke-width", "2px")
            .call(drag)
d3.select("#latent-denoiser-l3-expl-vis-slider-thumb-g")
    .append("circle")
        .attr("id", "latent-denoiser-l3-expl-vis-slider-thumb-circle")
        .attr("cx", sliderWidth*partitions[2])
        .attr("cy", sliderHeight*(1-partitions[2]))
        .attr("r", "5.5")
        .attr("fill", "#b0b0b0")
        .attr("stroke", "white")
        .attr("stroke-width", "2.5px")
        .style("cursor", "pointer")
        .call(drag)
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("g")
        .attr("id", "latent-denoiser-l3-expl-vis-tick-label-g")
        .selectAll("text")
        .data([[0,"#a9a9a9"],[1,"#C8E4F0"],[7,"#A5D2E4"],[20,"#6CB2D0"]])
        .enter()
        .append("text")
            .text(d=>d[0])
            .attr("x", (d,i)=>d[0]==20?partitions[i]*sliderWidth-42:partitions[i]*sliderWidth-32)
            .attr("y", (d,i)=>(1-partitions[i])*sliderHeight+6)
            .attr("fill", d=>d[1])
            .style("font-weight", "500")
            .style("font-size", "20px")
d3.select("#latent-denoiser-l3-expl-vis-tick-label-g")
    .append("text")
        .text("x")
        .style("font-size", "15px")
        .style("font-weight", "300")
        .attr("fill", "#A5D2E4")
        .attr("x", partitions[2]*sliderWidth-41)
        .attr("y", (1-partitions[2])*sliderHeight+6)
d3.select("#latent-denoiser-l3-expl-vis-tick-label-g")
    .append("text")
        .text("x")
        .style("font-size", "15px")
        .style("font-weight", "300")
        .attr("fill", "#6CB2D0")
        .attr("x", partitions[3]*sliderWidth-50)
        .attr("y", (1-partitions[3])*sliderHeight+6)
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("g")
        .attr("id", "latent-denoiser-l3-expl-vis-tick-label-expl-g")
        .selectAll("text")
        .data([["Predicted noise",0.0,"#a9a9a9"], ["without texpt prompt",0.0,"#a9a9a9"], ["Predicted noise",partitions[1],"#8db7c9"], ["without text prompt",partitions[1],"#8db7c9"]])
        .enter()
        .append("text")
            .text(d=>d[0])
            .attr("fill", d => d[2])
            .attr("x", (d,i) => d[1]*sliderWidth/2-127-30*(i==1)+17*(i>1)-23*(i==3))
            .attr("y", (d,i) => (1-d[1])*sliderHeight+12*(i%2)-3)
            .style("font-weight", "300")
            .style("font-size", "12px")
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("g")
        .attr("id", "latent-denoiser-l3-expl-vis-arrow-g")
        .append("line")
        .attr("stroke","url(#latent-denoiser-l3-expl-vis-arrow-gradient)")
        .attr("stroke-width", "2px")
        .attr("x1", partitions[1]*sliderWidth+25)
        .attr("y1", (1-partitions[1])*sliderHeight)
        .attr("x2", (partitions[1]+0.1)*sliderWidth+25)
        .attr("y2", (1-partitions[1]-0.1)*sliderHeight)
        .attr("marker-end", "url(#latent-denoiser-l3-expl-vis-arrow-head)")
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("defs")
    .append("linearGradient")
        .attr("id", "latent-denoiser-l3-expl-vis-arrow-gradient")
        .attr("x1", "0%")
        .attr("y1", "0%")
        .attr("x2", "100%")
        .attr("y2", "0%")
        .selectAll("stop")
        .data([["#6BB1CF80", "0%"],["#6BB1CFFF","100%"]])
        .enter()
            .append("stop")
            .attr("offset", d=>d[1])
            .style("stop-color", d=>d[0])
d3.select("#latent-denoiser-l3-expl-vis-svg")
    .append("defs")
    .append("marker")
        .attr("id", "latent-denoiser-l3-expl-vis-arrow-head")
                .attr("markerWidth", "10")
                .attr("markerHeight", "4")
                .attr("refX", "0")
                .attr("refY", "2")
                .attr("orient", "auto")
                .append("polygon")
                    .attr("points", "0 0, 4 2, 0 4")
                    .attr("fill", "#6BB1CF")
d3.select("#latent-denoiser-l3-expl-vis-arrow-g")
    .append("text")
        .text("Upscale difference")
        .attr("fill", "#B0B0B0")
        .style("font-weight", "300")
        .style("font-size", "12px")
        .attr("x", (partitions[1]+0.1)*sliderWidth+40)
        .attr("y", (1-partitions[1]-0.055)*sliderHeight-4)
d3.select("#latent-denoiser-l3-expl-vis-arrow-g")
    .append("text")
        .text("at 0 and 1")
        .attr("fill", "#B0B0B0")
        .style("font-weight", "300")
        .style("font-size", "12px")
        .attr("x", (partitions[1]+0.1)*sliderWidth+40)
        .attr("y", (1-partitions[1]-0.055)*sliderHeight+8)

d3.select("#latent-denoiser-l3-expl-container")
    .append("img")
        .attr("id", "latent-denoiser-l3-expl-vis-leave-img")
        .on("click", reduceLatentDenoiserL3)
        .attr("src", "./icons/leave.svg")
        .attr("height", `25px`)