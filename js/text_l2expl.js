import {reduceTextVectorGenerator} from "./function.js"

document.addEventListener("keydown", (e) => {
    if (window.textVectorGeneratorL2Expanded && !window.textVectorGeneratorL3Expanded && e.key == "Escape") reduceTextVectorGenerator();
})

let textGeneratorL2ExplDiv = d3.select("#architecture-container")
    .append("div")
    .attr("id", "generate-text-vector-l2-expl-container")

d3.select("#generate-text-vector-l2-expl-container")
    .append("img") 
        .attr("id", "generate-text-vector-l2-expl-reduce-button")
        .attr("src", "./icons/reduce.svg")
        .attr("alt", "Reduce SVG")
        .attr("height", `20px`)
        .on("click", reduceTextVectorGenerator)

let textGeneratorL2ExplTokenizerDiv = textGeneratorL2ExplDiv.append("div")
    .attr("id", "generate-text-vector-l2-tokenizer-container")
textGeneratorL2ExplTokenizerDiv.append("svg")
    .append("rect")
        .attr("class", "architecture-rect")
        .attr("width", "85")
        .attr("height", "33")
        .attr("fill", "#f4f4f4")
        .attr("rx", "5")
        .attr("ry", "5")
textGeneratorL2ExplTokenizerDiv.append("div")
.text("Tokenizer")
    .attr("id", "generate-text-vector-l2-tokenizer-text")
    .attr("class", "architecture-text")

let textGeneratorL2ExplTokenizerEncoderDiv = textGeneratorL2ExplDiv.append("div")
    .attr("id", "generate-text-vector-l2-tokenizer-encoder-container")
textGeneratorL2ExplTokenizerEncoderDiv
    .append("svg")
    .attr("id", "generate-text-vector-l2-tokenizer-encoder-token-arrow-svg")
    .append("g")
    .append("line")
        .attr("id", "generate-text-vector-l2-tokenizer-encoder-arrow")
        .attr("x1", "0")
        .attr("x2", "136")
        .attr("y1", "10")
        .attr("y2", "10")
        .attr("marker-end", "url(#architecture-arrow-head)")
        .attr("stroke-width", "2")
        .attr("stroke", "#b0b0b0")
textGeneratorL2ExplTokenizerEncoderDiv
    .append("div")
    .attr("id", "generate-text-vector-l2-tokenizer-encoder-expl-container")
d3.select("#generate-text-vector-l2-tokenizer-encoder-expl-container")
    .append("svg")
        .attr("id", "generate-text-vector-l2-tokenizer-encoder-expl-arrow")
        .append("g")
        .append("path")
            .attr("d", "M 15 10 C 20 17, 35 17, 40 10")
            .attr("stroke", "#bdbdbd")
            .attr("fill", "transparent")
d3.select("#generate-text-vector-l2-tokenizer-encoder-expl-arrow g")
    .append("path")
    .attr("d", "M 15 10 l 3.5 -1")
    .attr("stroke", "#bdbdbd")
    .attr("fill", "transparent")
d3.select("#generate-text-vector-l2-tokenizer-encoder-expl-arrow g")
    .append("path")
    .attr("d", "M 15 10 l 1 4")
    .attr("stroke", "#bdbdbd")
    .attr("fill", "transparent")
d3.select("#generate-text-vector-l2-tokenizer-encoder-expl-container")
    .append("div")
    .attr("id", "generate-text-vector-l2-tokenizer-encoder-expl-text")
    .text("77 tokens")
d3.select("#generate-text-vector-l2-tokenizer-encoder-expl-container")
    .append("div")
    .attr("id", "generate-text-vector-l2-tokenizer-encoder-expl-text-details")
    .text("Truncate if prompt consists of more than 77 tokens Pad with <end> if less than 77 tokens")

let textGeneratorL2ExplEncoderDiv = textGeneratorL2ExplDiv.append("div")
    .attr("id", "generate-text-vector-l2-encoder-container")
textGeneratorL2ExplEncoderDiv.append("svg")
    .append("rect")
        .attr("class", "architecture-rect")
        .attr("id", "generate-text-vector-l2-encoder-rect")
        .attr("width", "85")
        .attr("height", "50")
        .attr("fill", "#f4f4f4")
        .attr("rx", "5")
        .attr("ry", "5")
textGeneratorL2ExplEncoderDiv.append("div")
    .text("Token Encoder")
        .attr("id", "generate-text-vector-l2-encoder-text")
        .attr("class", "architecture-text")

d3.select("#generate-text-vector-l2-expl-container")
    .append("div")
    .attr("id", "generate-text-vector-l2-encoder-expl-text")
    .text("768D vector for each token")

d3.select("#architecture-container").append("div").attr("id", "generate-text-vector-l2-cover")
